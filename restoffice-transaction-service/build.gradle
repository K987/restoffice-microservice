buildscript {
	ext {
		springBootVersion = '2.0.1.RELEASE'
	}
	repositories {
		mavenCentral()
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
	}
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'

group = 'hu.restoffice'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = 1.8

repositories {
	mavenCentral()
	maven { url "https://repo.spring.io/milestone" }
}


ext {
	springCloudVersion = 'Finchley.M9'
}

configurations {
    compile.exclude module: 'spring-boot-starter-logging'
}
dependencies {
	//boot.web
	compile('org.springframework.boot:spring-boot-starter-web')
	compile('org.springframework.boot:spring-boot-starter-actuator')
//    compile('org.springframework.boot:spring-boot-starter-hateoas')
    //boot.log4h2 custom 
	compile('org.springframework.boot:spring-boot-starter-log4j2')

    //cloud.config
	compile('org.springframework.cloud:spring-cloud-starter-config')
	//cloud.bus
	compile('org.springframework.cloud:spring-cloud-starter-bus-amqp')
	//cloud.eureka
	compile('org.springframework.cloud:spring-cloud-starter-netflix-eureka-client')
    //cloud.security
	compile('org.springframework.cloud:spring-cloud-starter-oauth2')
    compile('org.springframework.cloud:spring-cloud-starter-security')
    //cloud.data
    compile('org.springframework.boot:spring-boot-starter-data-jpa')
//    compile('org.springframework.boot:spring-boot-starter-data-rest')

    runtime('com.h2database:h2')

	testCompile('org.springframework.boot:spring-boot-starter-test')
}

dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
	}
}
